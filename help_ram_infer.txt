 
  //always @(posedge io_axiClk) begin
  //  if(io_axi_w_payload_strb[0] && stage0_fire && stage0_payload_fragment_write ) begin
  //    ram_symbol0[_zz_io_axi_r_payload_data] <= _zz_io_axi_r_payload_data_1[7 : 0];
  //  end
  //  if(io_axi_w_payload_strb[1] && stage0_fire && stage0_payload_fragment_write ) begin
  //    ram_symbol1[_zz_io_axi_r_payload_data] <= _zz_io_axi_r_payload_data_1[15 : 8];
  //  end
  //  if(io_axi_w_payload_strb[2] && stage0_fire && stage0_payload_fragment_write ) begin
  //    ram_symbol2[_zz_io_axi_r_payload_data] <= _zz_io_axi_r_payload_data_1[23 : 16];
  //  end
  //  if(io_axi_w_payload_strb[3] && stage0_fire && stage0_payload_fragment_write ) begin
  //    ram_symbol3[_zz_io_axi_r_payload_data] <= _zz_io_axi_r_payload_data_1[31 : 24];
  //  end
  //end

  wire a = io_axi_w_payload_strb[0] && stage0_fire && stage0_payload_fragment_write;
  wire b = io_axi_w_payload_strb[1] && stage0_fire && stage0_payload_fragment_write;
  wire c = io_axi_w_payload_strb[2] && stage0_fire && stage0_payload_fragment_write;
  wire d = io_axi_w_payload_strb[3] && stage0_fire && stage0_payload_fragment_write;
  always @(posedge io_axiClk) begin
    if(a) begin
      ram_symbol0[_zz_io_axi_r_payload_data] <= _zz_io_axi_r_payload_data_1[7 : 0];
    end
    if(b) begin
      ram_symbol1[_zz_io_axi_r_payload_data] <= _zz_io_axi_r_payload_data_1[15 : 8];
    end
    if(c ) begin
      ram_symbol2[_zz_io_axi_r_payload_data] <= _zz_io_axi_r_payload_data_1[23 : 16];
    end
    if(d ) begin
      ram_symbol3[_zz_io_axi_r_payload_data] <= _zz_io_axi_r_payload_data_1[31 : 24];
    end
  end
